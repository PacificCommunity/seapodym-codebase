% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rw-seamove.R
\name{reg.structure.mapping}
\alias{reg.structure.mapping}
\title{Reading the SEAPODYM output file with movement matrices and reduces their dimensions to the MFCL regional structure, given the provided mapping between MFCL and SEAPODYM regions, where all regions are non-overlapping and SEAPODYM regions follow: nbr.sea > nbr.mfcl, total.area(regs.sea) = total.area(regs.mfcl), and for a given MFCL 'i-th' region reg.mfcl.i = sum.j(regs.sea.j). The function writes the SEAPODYM output files with reduced regional structure in the new output directory.}
\usage{
reg.structure.mapping(dir.in, dir.out, age, reg.mfcl)
}
\arguments{
\item{dir.in}{is the SEAPODYM output directory containing files [spname]_FluxesRegion_age[a].txt, where a is the age class indices from 0 to A+, with the original regional structure defined in simulations.}

\item{dir.out}{is the new output directory containing files [spname]_FluxesRegion_age[a].txt with new regional structure.}

\item{age}{is the vector of age class indices, determines the window of age classes to be extracted from the outputs. Note, the age indices must be a sub-set of age classes written in the outputs.}

\item{reg.mfcl}{is the list with MFCL regions, where each element of the list contains the indices of the seapodym regions.}
}
\description{
Reading the SEAPODYM output file with movement matrices and reduces their dimensions to the MFCL regional structure, given the provided mapping between MFCL and SEAPODYM regions, where all regions are non-overlapping and SEAPODYM regions follow: nbr.sea > nbr.mfcl, total.area(regs.sea) = total.area(regs.mfcl), and for a given MFCL 'i-th' region reg.mfcl.i = sum.j(regs.sea.j). The function writes the SEAPODYM output files with reduced regional structure in the new output directory.
}
\examples{
# Example #1:
dir.in<-"./output"
dir.out<-"./output/8regs/"
reg.mfcl<-list(r1=c(1,2),r2=c(3,4),r3=c(5,6),r4=7,r5=c(8,9),r6=c(10,11),r7=c(12,13,14),r8=15)
reg.structure.mapping(dir.in,dir.out,1:48,reg.mfcl)

# Example #2:
dir.out<-"output/5regs/"
reg.mfcl<-list(r1=1:7,r2=c(8,9),r3=c(10,11),r4=c(12,13,14),r5=15)
reg.structure.mapping(dir.in,dir.out,1:48,reg.mfcl)
}
